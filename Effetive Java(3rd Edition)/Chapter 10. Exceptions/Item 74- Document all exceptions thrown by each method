Item 74: Document all exceptions thrown by each method

	* Always declare checked exceptions individually, and document precisely the conditions under which each one is thrown using the Javadoc @throws tag.

	* Don't throw Exception, or worse, Throwable
		-> it obscures any other exception that may be thrown in the same context.

	* use the Javadoc @throws tag to document each exception that a method can throw, but do not use the throws keyword on unchecked exceptions.

	* If an exception is thrown by many methods in a class for the same reason, you can document the exception in the class's documentation comment rather than documenting it individually for each method.


	(Q)
		- Since Unchecked Exceptions such as NullPointerException, ArithmeticExceptions indicate  programming errors.
			-> declaring them in "throws" should be avoided.

		* Unchecked exceptions are runtime exceptions.

		(Checked and Unchecked Exceptions)
			- Every exception is either a checked exception or an unchecked exception. If a method includes code that could cause a checked exception to be thrown, then:
				1) the exception must be declared in the method header, using a throws clause, or the code that might cause the exception to be thrown must be inside a try block with a catch clause for that exception.
			So in general, you must always include some code that acknowledges the possibility of a checked exception being thrown. If you don't, you will get an error when you try to compile your code.

			* Some exceptions are checked and some are unchecked. If a method might throw one or more checked exceptions, they must be listed in the method's throws clause.

