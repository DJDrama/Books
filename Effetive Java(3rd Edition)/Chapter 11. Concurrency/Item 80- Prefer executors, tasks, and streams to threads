Item 80: Prefer executors, tasks, and streams to threads
	
	- "Executor Framework"
		-> flexible interface-based task execution facility.
			ex)
				============================================================
				ExecutorService exec = Executors.newSingleThreadExecutor();
				exec.execute(runnable);
				exec.shutDown();
				============================================================

	- Executors.newFixedThreadPool
		-> gives you a pool with a fixed number of threads, or using the "ThreadPoolExecutor" class directly, for maximum control

	- "Thread"
		-> serves as both a unit of work
		-> and the mechanism for executing it.

		* In the executor framework, the unit of work and the execution mechanism are separate.

	- Key abstraction is the unit of work, which is the "task".
		1) Runnable
		2) Callable (which is like Runnable, except that it returns a value and can throw arbitrary exceptions.)